<div class="col">
  <h2 class="mb-2 text-center">コメント投稿</h2>

  <div class="col mb-4">
    <div id="comment-map" class="m-auto"></div>
  </div>

  <div class="row">
    <div class="col-5 m-auto">
      <%= form_with model: @comment, url: public_comments_path do |f| %>

        <h3>コメント内容：</h3>
        <%= render 'layouts/validate_errors', data: @comment %>
        <div class="ml-4 mb-2">
            <%= f.text_area :comment, id: "comment_form_area", placeholder: "例：大きなゴミ箱があります！" %>
        </div>

        <%= f.hidden_field :user_id, :value => current_user.id %>
        <%= f.hidden_field :spot_id, :value => @spot.id  %>
        <div class="text-center">
          <%= f.submit "コメントを投稿する", class:"btn btn-primary" %>
        </div>
      <% end %>
    </div>
  </div>
</div>


<script>
 (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
    key: "<%= ENV['API_KEY'] %>"
  });

  //初期マップの設定
  let map;
  let marker
  let spotKindsHtml = "";
  let infowindow = "";
  async function initMap() {
    const { Map } = await google.maps.importLibrary("maps");

    map = new google.maps.Map(document.getElementById('comment-map'), {
      center:  { lat: <%= @spot.latitude %>, lng: <%= @spot.longitude %> },
      zoom: 15,
      mapTypeControl: false
    });
    kindsInfo();



    initializeMarker();
    infowindow.open(map, marker);
  }

  // 初期マーカーの設定
  function initializeMarker() {
    marker = new google.maps.Marker({
      position: { lat: <%= @spot.latitude %>, lng: <%= @spot.longitude %> },
      map: map
    });
  }

  // 情報ウィンドウの設定
  function kindsInfo() {
      <% @spot.spot_kinds.each do |spot_kind| %>
        <% case spot_kind.kind.name %>
          <% when '燃えるゴミ' %>
            spotKindsHtml += "<p class='spot-kind burnable-garbage'><%= spot_kind.kind.name %></p>";
          <% when 'プラスチック' %>
            spotKindsHtml += "<p class='spot-kind plastic'><%= spot_kind.kind.name %></p>";
          <% when 'ペットボトル' %>
            spotKindsHtml += "<p class='spot-kind pet-bottles'><%= spot_kind.kind.name %></p>";
          <% when 'カン' %>
            spotKindsHtml += "<p class='spot-kind can'><%= spot_kind.kind.name %></p>";
          <% when 'ビン' %>
            spotKindsHtml += "<p class='spot-kind bottle'><%= spot_kind.kind.name %></p>";
        <% end %>
      <% end %>

      infowindow = new google.maps.InfoWindow({
        position: { lat: <%= @spot.latitude %>, lng: <%= @spot.longitude %> },
        content: "スポット情報</br>" +
          "スポット名：<%= @spot.name %></br>" +
          "ゴミの種類：</br>" +
          spotKindsHtml +
          "<div class='text-right'>登録日：<%= @spot.created_at.strftime('%Y/%m/%d') %></div>"
      });
    }

  initMap()
</script>