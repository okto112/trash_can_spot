<div class="col">
  <h2 class="p-2 bg-secondary text-white mb-2 text-center">スポット登録</h2>

  <%= render 'layouts/spot_errors', spot: @spot %>

  <div class="row justify-content-md-center">
    <div class="col-2">
      <h3>スポット情報</h3>
      <%= form_with model: @spot, url: public_spots_path do |f| %>

        <h3>スポット名</h3>
        <div class="ml-4">
          <%= f.text_field :name, placeholder: "例：コンビニのゴミ箱" %>
        </div>

        <h3>スポット説明</h3>
        <div class="ml-4">
            <p><%= f.text_area :introduction, placeholder: "例：○○コンビニの前にあるゴミ箱です。" %></p>
        </div>

        <h3>ゴミ箱の種類</h3>
        <div class="ml-4">
            <% @kinds.each do |kind| %>
              <%= check_box_tag 'spot[kind_ids][]', kind.id %>
              <%= label_tag "kind_#{kind.id}", kind.name %><br>
            <% end %>
        </div>

        <%= f.hidden_field :user_id, :value => current_user.id %>
        <%= f.hidden_field :latitude, id: 'latitude', value: '34.70246347104699'  %>
        <%= f.hidden_field :longitude, id: 'longitude', value: '135.4955532773327' %>

        <%= f.submit "スポットを登録する", class:"btn btn-primary" %>

      <% end %>
    </div>

    <div class="col-9 ml-3">
      <input id="address" type="textbox" placeholder = "大阪駅">
      <input type="button" value="検索" onclick="codeAddress()">
      マーカーをドラック＆ドロップで位置の調整ができます。</br>
      <div id="map" class="mt-2">
         <script>
           (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
              key: "<%= ENV['API_KEY'] %>"
            });

            //初期マップの設定
            let map;
            let marker
            async function initMap() {
              const { Map } = await google.maps.importLibrary("maps");

              map = new google.maps.Map(document.getElementById('map'), {
                center:  {lat: 34.70246347104699, lng: 135.4955532773327},
                zoom: 15,
                mapTypeControl: false
              });

              initializeMarker();
            }

            // 初期マーカーの設定
            function initializeMarker() {
              marker = new google.maps.Marker({
                position: { lat: 34.70246347104699, lng: 135.4955532773327 },
                map: map,
                draggable: true
              });

              google.maps.event.addListener(marker, 'dragend', function (event) {
                document.getElementById('latitude').value = event.latLng.lat();
                document.getElementById('longitude').value = event.latLng.lng();
              });
            }

            //検索後のマップ作成
            let geocoder
            let aft = false;
            function codeAddress(){
              marker.setMap(null);
              geocoder = new google.maps.Geocoder();
              let inputAddress = document.getElementById('address').value;
              geocoder.geocode( { 'address': inputAddress}, function(results, status) {
                if (status == 'OK') {
                    //マーカーが複数できないようにする
                    if (aft){
                        marker.setMap(null);
                    }

                    //新しくマーカーを作成する
                    map.setCenter(results[0].geometry.location);
                        marker = new google.maps.Marker({
                          map: map,
                          position: results[0].geometry.location,
                          draggable: true	// ドラッグ可能にする
                        });

                    //二度目以降か判断
                    aft = true

                    document.getElementById('latitude').value = results[0].geometry.location.lat();
                    document.getElementById('longitude').value = results[0].geometry.location.lng();

                    google.maps.event.addListener( marker, 'dragend', function(ev){
                        document.getElementById('latitude').value = event.latLng.lat();
                        document.getElementById('longitude').value = event.latLng.lng();
                    });
                } else {
                  alert('該当する結果がありませんでした：' + status);
                }
              });
            }

            initMap()
         </script>
      </div>
    </div>
  </div>
</div>