<div class="col">
  <h2 class="mb-2 text-center"><%= User.find(@comment.user_id).name %>さんのコメント詳細</h2>

  <%= render 'layouts/flash_message' %>

  <div class="col mb-3">
    <div id="comment-map" class="m-auto"></div>
  </div>

  <div class="row">
    <div class="col-5 m-auto">
        <h3>コメント内容：</h3>
        <div id="comment_form_area" class="ml-4 mb-2 border border-success">
            <%= @comment.comment %>
        </div>
        <div class="m-2 d-flex justify-content-center">
          <%= link_to edit_admin_comment_path(@comment.id), data: {"turbolinks" => false}, class:"btn btn-primary" do %>
            <i class="fa-solid fa-pen-to-square"> 編集する</i>
          <% end %>
        </div>
    </div>
  </div>
</div>


<script>
 (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
    key: "<%= ENV['API_KEY'] %>"
  });

  //初期マップの設定
  let map;
  let marker
  let spotKindsHtml = "";
  let infowindow = "";
  async function initMap() {
    const { Map } = await google.maps.importLibrary("maps");

    map = new google.maps.Map(document.getElementById('comment-map'), {
      center:  { lat: <%= @spot.latitude %>, lng: <%= @spot.longitude %> },
      zoom: 15,
      mapTypeControl: false
    });
    kindsInfo();



    initializeMarker();
    infowindow.open(map, marker);
  }

  // 初期マーカーの設定
  function initializeMarker() {
    marker = new google.maps.Marker({
      position: { lat: <%= @spot.latitude %>, lng: <%= @spot.longitude %> },
      map: map
    });
  }

  // 情報ウィンドウの設定
  function kindsInfo() {
      <% @spot.spot_kinds.each do |spot_kind| %>
        <% case spot_kind.kind.color %>
          <% when 'white' %>
            spotKindsHtml += "<p class='spot-kind white'><%= spot_kind.kind.name %></p>";
          <% when 'gray' %>
            spotKindsHtml += "<p class='spot-kind gray'><%= spot_kind.kind.name %></p>";
          <% when 'red' %>
            spotKindsHtml += "<p class='spot-kind red'><%= spot_kind.kind.name %></p>";
          <% when 'purple' %>
            spotKindsHtml += "<p class='spot-kind purple'><%= spot_kind.kind.name %></p>";
          <% when 'blue' %>
            spotKindsHtml += "<p class='spot-kind blue'><%= spot_kind.kind.name %></p>";
          <% when 'yellow' %>
            spotKindsHtml += "<p class='spot-kind yellow'><%= spot_kind.kind.name %></p>";
          <% when 'green' %>
            spotKindsHtml += "<p class='spot-kind green'><%= spot_kind.kind.name %></p>";
          <% when 'orange' %>
            spotKindsHtml += "<p class='spot-kind orange'><%= spot_kind.kind.name %></p>";
          <% when 'pink' %>
            spotKindsHtml += "<p class='spot-kind pink'><%= spot_kind.kind.name %></p>";
          <% when 'brown' %>
            spotKindsHtml += "<p class='spot-kind brown'><%= spot_kind.kind.name %></p>";
        <% end %>
      <% end %>

      infowindow = new google.maps.InfoWindow({
        position: { lat: <%= @spot.latitude %>, lng: <%= @spot.longitude %> },
        content: "スポット情報</br>" +
          "スポット名：<%= @spot.name %></br>" +
          "ゴミの種類：</br>" +
          spotKindsHtml +
          "<div class='text-right'>登録日：<%= @spot.created_at.strftime('%Y/%m/%d') %></div>"
      });
    }

  initMap()
</script>